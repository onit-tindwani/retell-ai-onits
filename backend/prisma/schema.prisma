// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String?
  phoneNumber    String?   // Added for user profile
  auth0Id        String?   // For Auth0 integration
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  aiPersonality  String?   // For AI personality (if not in Settings)
  settings       Settings?
  subscription   Subscription?
  calls          Call[]
  payments       Payment[]
  recordings     Recording[]
  bulkCalls      BulkCall[]
  contacts       Contact[]
  scheduledCalls ScheduledCall[]
  templates      Template[]
}

model Settings {
  id            String   @id @default(uuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  theme         String?
  language      String?
  timezone      String?
  aiPersonality String?  // For AI personality (if you want it here)
}

model Subscription {
  id                String   @id @default(uuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id])
  stripeId          String
  status            String
  plan              String
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean?
  createdAt         DateTime @default(now())
}

model Call {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  phoneNumber String
  status      String
  duration    Int?
  transcript  String?
  sentiment   String?     // Added for analytics
  templateId  String?     // For bulk/scheduled calls
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  recording   Recording?
  analytics   Analytics?
  scheduledCallId String? // For scheduled calls
}

model Recording {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  callId    String   @unique
  call      Call     @relation(fields: [callId], references: [id])
  format    String?
  duration  Int?
  createdAt DateTime @default(now())
}

model Payment {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  stripeId  String
  amount    Int
  currency  String
  status    String
  createdAt DateTime @default(now())
}

model Analytics {
  id        String   @id @default(uuid())
  callId    String   @unique
  call      Call     @relation(fields: [callId], references: [id])
  sentiment String?
  createdAt DateTime @default(now())
}

model BulkCall {
  id                String   @id @default(uuid())
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  contacts          Json     // Array of contact IDs or phone numbers
  templateId        String?
  delayBetweenCalls Int?
  status            String?
  createdAt         DateTime @default(now())
}

model Contact {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  phone     String
  email     String?
  createdAt DateTime @default(now())
}

model ScheduledCall {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  phoneNumber String
  templateId  String?
  scheduledAt DateTime
  status      String?
  createdAt   DateTime @default(now())
}

model Template {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  content   String
  createdAt DateTime @default(now())
} 